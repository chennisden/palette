% \iffalse meta-comment
% This package was written for pdfLaTeX.
% In particular, there is no guarantee that this works for other tex engines.
%
% Copyright (C) 2021 Dennis Chen <proofprogram@gmail.com>
%
% This work may be distributed and/or modified under
% the conditions the LaTeX Project Public License (LPPL),
% either version 1.3 of this license or (at your option)
% any later version. The latest version of this license
% can be found in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
%<*internal>
\iffalse
%</internal>
%<*readme>
# The LaTeX package palette - version 1.0.0 (2021/07/22)

**palette** provides the ability to create custom color palettes and symbol palettes ("symbol suites"), and swap one palette in for another easily. It also allows the user to create a variable that represents the selected palette, and provides checks in case the variable represents a palette that does not exist.

The package is split into `colorpalette` and `symbolsuite`.

## Installation instructions

A working TeX installation is required.

This is a self-extracting dtx file, so run

    pdflatex palette.dtx

to generate the README, documentation, and packages.
%</readme>
% \fi

% \iffalse

%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
    \expandafter\begingroup
\fi
%</internal>
%<*install>

\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble

This is a generated file.

Copyright (C) 2021 Dennis Chen <proofprogram@gmail.com>

This work may be distributed and/or modified under
the conditions the LaTeX Project Public License (LPPL),
either version 1.3 of this license or (at your option)
any later version. The latest version of this license
can be found in

    http://www.latex-project.org/lppl.txt

and version 1.3 or later is part of all distributions of LaTeX
version 2005/12/01 or later.

To produce the documentation, run palette.dtx through pdflatex.

\endpreamble
\postamble

This package consists of the file palette.dtx,
          and the generated files colorpalette.sty,
                                  symbolsuite.sty,
                                  palette.pdf.
\endpostamble

\usedir{tex/latex/palette}
\generate{
    \file{colorpalette.sty}{\from{\jobname.dtx}{color}}
    \file{symbolsuite.sty}{\from{\jobname.dtx}{symbol}}
}

\obeyspaces
\Msg{*************************************************************}
\Msg{*                                                           *}
\Msg{* To finish the installation you have to move the following *}
\Msg{* files into a directory searched by TeX:                   *}
\Msg{*                                                           *}
\Msg{*     colorpalette.sty                                      *}
\Msg{*     symbolsuite.sty                                       *}
\Msg{*                                                           *}
\Msg{* To produce the documentation, run the file                *}
\Msg{* palette.dtx through LaTeX.                                *}
\Msg{*                                                           *}
\Msg{* Happy TeXing!                                             *}
\Msg{*                                                           *}
\Msg{*************************************************************}

%</install>
%<install>\endbatchfile
%<*internal>

\usedir{source/latex/palette}
\generate{
    \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble

\usedir{doc/latex/palette}
\generate{
    \file{README.md}{\from{\jobname.dtx}{readme}}
}

\ifx\fmtname\nameofplainTeX
    \expandafter\endbatchfile
\else
    \expandafter\endgroup
\fi
%</internal>
%
%<color|symbol>\NeedsTeXFormat{LaTeX2e}
%<color>\ProvidesPackage{colorpalette}
%<symbol>\ProvidesPackage{symbolsuite}
%<color|symbol>[2021/07/22 v1.0.0 Create palettes for colors and symbols]
%
%\RequirePackage{ifallfalse}
%\RequirePackage{macrolist}
%
%<*driver>
\ProvidesFile{\jobname.dtx}[2021/07/22 v1.0.0 Create palettes for colors and symbols]
\documentclass{ltxdoc}

\EnableCrossrefs
\CodelineIndex
\RecordChanges

\begin{document}
    \DocInput{\jobname.dtx}
    \PrintIndex
    \PrintChanges
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
%
% \changes{v1.0.0}{2021/07/22}{Initial version}
%
% \title{\textsf{palette} -- Create palettes for colors and symbols}
% \author{Dennis Chen \\ proofprogram@gmail.com}
% \date{\fileversion{} (\filedate)}
%
% \maketitle
%
% \begin{abstract}
%   The \textsf{palette} package provides \textsf{colorpalette.sty} and \textsf{symbolsuite.sty}, which can be used to create and manage palettes of colors and symbols, respectively.
% \end{abstract}
%
% \section{Overview}
% We will go over the basic structure of the user interface in broad terms first (i.e. no macros or environments yet). We will use \textsf{colorpalette} as our example here, but \textsf{symbolsuite} behaves virtually identically.
%
% First, the user can create palette \emph{themes}, which are independent from each other. Then, you can add colors to themes. Finally, you can make a palette associated with a theme and set its colors.
%
% \section{colorpalette.sty}
%
% \DescribeMacro{\newpalettetheme}
% To create a new palette theme called \textsf{theme}, write |\newpalettetheme{theme}|.
%
% \iffalse
%<*color>
\newcommand\newpalettetheme[1]{
    \newlist{colorpalette@theme@#1}
}
%</color>
% \fi
% \DescribeMacro{\addcolortotheme}
% To add a color \textsf{color} to theme \textsf{theme}, write |\addcolortotheme{theme}{color}|.
%
% \iffalse
%<*color>
\newcommand\addcolortotheme[2]{
    \listadd{colorpalette@theme@#1}{colorpalette@#2}
}
%</color>
% \fi
%
% \DescribeMacro{\newpalette}
% To create a new palette \textsf{palette} based on theme \textsf{theme}, write |\newpalette{theme}{palette}|.
%
% \iffalse
%<*color>
\newcommand\newpalette[2]{
    % Check that the palette exists
    \listexists{colorpalette@theme@#1}{}{
        \PackageError{colorpalette}{The theme passed in does not exist}{}
    }
    % It doesn't really matter what we pass into the definition of this macro, only as long as it exists
    \expandafter\def\csname colorpalette@theme@#1@#2\endcsname{}
}
%<*/color>
% \fi
%
% \DescribeMacro{\setpalettecolor}
% To set the color \textsf{color} (which was defined with respect to the theme of the palette) as the color value \textsf{value} in the format \textsf{encoding} (which by default is HTML) of palette \textsf{palette}, write |\setpalettecolor{palette}{color}[encoding]{value}|.
%
% \iffalse
%<*color>
\newcommand\setpalettecolor[2]{
    \def\colorpalette@temp@palettename{#1}
    \def\colorpalette@temp@colorname{#2}
    \colorpalette@setpalettecolor
}
\newcommand\colorpalette@setpalettecolor[2][HTML]{
    \definecolor{colorpalette@\colorpalette@temp@palettename @\colorpalette@temp@colorname}{#1}{#2}
}
%</color>
% \fi
%
% \section{symbolsuite.sty}
%
% \Finale
%
\endinput